// See file LICENSE for more information.

library impl.ec_domain_parameters.brainpoolp512t1;

import 'package:pointycastle/ecc/api.dart';
import 'package:pointycastle/ecc/ecc_base.dart';
import 'package:pointycastle/src/ec_standard_curve_constructor.dart';
import 'package:pointycastle/src/registry/registry.dart';

// ignore: camel_case_types
class ECCurve_brainpoolp512t1 extends ECDomainParametersImpl {
  static final FactoryConfig factoryConfig = StaticFactoryConfig(
      ECDomainParameters, ["b","r","a","i","n","p","o","o","l","p","5","1","2","t","1",].join(), () => ECCurve_brainpoolp512t1());

  factory ECCurve_brainpoolp512t1() => constructFpStandardCurve(
      ["b","r","a","i","n","p","o","o","l","p","5","1","2","t","1",].join(), ECCurve_brainpoolp512t1._make,
      q: BigInt.parse(
          ["a","a","d","d","9","d","b","8","d","b","e","9","c","4","8","b","3","f","d","4","e","6","a","e","3","3","c","9","f","c","0","7","c","b","3","0","8","d","b","3","b","3","c","9","d","2","0","e","d","6","6","3","9","c","c","a","7","0","3","3","0","8","7","1","7","d","4","d","9","b","0","0","9","b","c","6","6","8","4","2","a","e","c","d","a","1","2","a","e","6","a","3","8","0","e","6","2","8","8","1","f","f","2","f","2","d","8","2","c","6","8","5","2","8","a","a","6","0","5","6","5","8","3","a","4","8","f","3",].join(),
          radix: 16),
      a: BigInt.parse(
          ["a","a","d","d","9","d","b","8","d","b","e","9","c","4","8","b","3","f","d","4","e","6","a","e","3","3","c","9","f","c","0","7","c","b","3","0","8","d","b","3","b","3","c","9","d","2","0","e","d","6","6","3","9","c","c","a","7","0","3","3","0","8","7","1","7","d","4","d","9","b","0","0","9","b","c","6","6","8","4","2","a","e","c","d","a","1","2","a","e","6","a","3","8","0","e","6","2","8","8","1","f","f","2","f","2","d","8","2","c","6","8","5","2","8","a","a","6","0","5","6","5","8","3","a","4","8","f","0",].join(),
          radix: 16),
      b: BigInt.parse(
          ["7","c","b","b","b","c","f","9","4","4","1","c","f","a","b","7","6","e","1","8","9","0","e","4","6","8","8","4","e","a","e","3","2","1","f","7","0","c","0","b","c","b","4","9","8","1","5","2","7","8","9","7","5","0","4","b","e","c","3","e","3","6","a","6","2","b","c","d","f","a","2","3","0","4","9","7","6","5","4","0","f","6","4","5","0","0","8","5","f","2","d","a","e","1","4","5","c","2","2","5","5","3","b","4","6","5","7","6","3","6","8","9","1","8","0","e","a","2","5","7","1","8","6","7","4","2","3","e",].join(),
          radix: 16),
      g: BigInt.parse(
          ["0","4","6","4","0","e","c","e","5","c","1","2","7","8","8","7","1","7","b","9","c","1","b","a","0","6","c","b","c","2","a","6","f","e","b","a","8","5","8","4","2","4","5","8","c","5","6","d","d","e","9","d","b","1","7","5","8","d","3","9","c","0","3","1","3","d","8","2","b","a","5","1","7","3","5","c","d","b","3","e","a","4","9","9","a","a","7","7","a","7","d","6","9","4","3","a","6","4","f","7","a","3","f","2","5","f","e","2","6","f","0","6","b","5","1","b","a","a","2","6","9","6","f","a","9","0","3","5","d","a","5","b","5","3","4","b","d","5","9","5","f","5","a","f","0","f","a","2","c","8","9","2","3","7","6","c","8","4","a","c","e","1","b","b","4","e","3","0","1","9","b","7","1","6","3","4","c","0","1","1","3","1","1","5","9","c","a","e","0","3","c","e","e","9","d","9","9","3","2","1","8","4","b","e","e","f","2","1","6","b","d","7","1","d","f","2","d","a","d","f","8","6","a","6","2","7","3","0","6","e","c","f","f","9","6","d","b","b","8","b","a","c","e","1","9","8","b","6","1","e","0","0","f","8","b","3","3","2",].join(),
          radix: 16),
      n: BigInt.parse(
          ["a","a","d","d","9","d","b","8","d","b","e","9","c","4","8","b","3","f","d","4","e","6","a","e","3","3","c","9","f","c","0","7","c","b","3","0","8","d","b","3","b","3","c","9","d","2","0","e","d","6","6","3","9","c","c","a","7","0","3","3","0","8","7","0","5","5","3","e","5","c","4","1","4","c","a","9","2","6","1","9","4","1","8","6","6","1","1","9","7","f","a","c","1","0","4","7","1","d","b","1","d","3","8","1","0","8","5","d","d","a","d","d","b","5","8","7","9","6","8","2","9","c","a","9","0","0","6","9",].join(),
          radix: 16),
      h: BigInt.parse('1', radix: 16),
      seed: null) as ECCurve_brainpoolp512t1;

  static ECCurve_brainpoolp512t1 _make(String domainName, ECCurve curve,
          ECPoint G, BigInt n, BigInt _h, List<int>? seed) =>
      ECCurve_brainpoolp512t1._super(domainName, curve, G, n, _h, seed);

  ECCurve_brainpoolp512t1._super(String domainName, ECCurve curve, ECPoint G,
      BigInt n, BigInt _h, List<int>? seed)
      : super(domainName, curve, G, n, _h, seed);
}
