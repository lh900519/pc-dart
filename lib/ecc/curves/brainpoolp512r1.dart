// See file LICENSE for more information.

library impl.ec_domain_parameters.brainpoolp512r1;

import 'package:pointycastle/ecc/api.dart';
import 'package:pointycastle/ecc/ecc_base.dart';
import 'package:pointycastle/src/ec_standard_curve_constructor.dart';
import 'package:pointycastle/src/registry/registry.dart';

// ignore: camel_case_types
class ECCurve_brainpoolp512r1 extends ECDomainParametersImpl {
  static final FactoryConfig factoryConfig = StaticFactoryConfig(
      ECDomainParameters, ["b","r","a","i","n","p","o","o","l","p","5","1","2","r","1",].join(), () => ECCurve_brainpoolp512r1());

  factory ECCurve_brainpoolp512r1() => constructFpStandardCurve(
      ["b","r","a","i","n","p","o","o","l","p","5","1","2","r","1",].join(), ECCurve_brainpoolp512r1._make,
      q: BigInt.parse(
          ["a","a","d","d","9","d","b","8","d","b","e","9","c","4","8","b","3","f","d","4","e","6","a","e","3","3","c","9","f","c","0","7","c","b","3","0","8","d","b","3","b","3","c","9","d","2","0","e","d","6","6","3","9","c","c","a","7","0","3","3","0","8","7","1","7","d","4","d","9","b","0","0","9","b","c","6","6","8","4","2","a","e","c","d","a","1","2","a","e","6","a","3","8","0","e","6","2","8","8","1","f","f","2","f","2","d","8","2","c","6","8","5","2","8","a","a","6","0","5","6","5","8","3","a","4","8","f","3",].join(),
          radix: 16),
      a: BigInt.parse(
          ["7","8","3","0","a","3","3","1","8","b","6","0","3","b","8","9","e","2","3","2","7","1","4","5","a","c","2","3","4","c","c","5","9","4","c","b","d","d","8","d","3","d","f","9","1","6","1","0","a","8","3","4","4","1","c","a","e","a","9","8","6","3","b","c","2","d","e","d","5","d","5","a","a","8","2","5","3","a","a","1","0","a","2","e","f","1","c","9","8","b","9","a","c","8","b","5","7","f","1","1","1","7","a","7","2","b","f","2","c","7","b","9","e","7","c","1","a","c","4","d","7","7","f","c","9","4","c","a",].join(),
          radix: 16),
      b: BigInt.parse(
          ["3","d","f","9","1","6","1","0","a","8","3","4","4","1","c","a","e","a","9","8","6","3","b","c","2","d","e","d","5","d","5","a","a","8","2","5","3","a","a","1","0","a","2","e","f","1","c","9","8","b","9","a","c","8","b","5","7","f","1","1","1","7","a","7","2","b","f","2","c","7","b","9","e","7","c","1","a","c","4","d","7","7","f","c","9","4","c","a","d","c","0","8","3","e","6","7","9","8","4","0","5","0","b","7","5","e","b","a","e","5","d","d","2","8","0","9","b","d","6","3","8","0","1","6","f","7","2","3",].join(),
          radix: 16),
      g: BigInt.parse(
          ["0","4","8","1","a","e","e","4","b","d","d","8","2","e","d","9","6","4","5","a","2","1","3","2","2","e","9","c","4","c","6","a","9","3","8","5","e","d","9","f","7","0","b","5","d","9","1","6","c","1","b","4","3","b","6","2","e","e","f","4","d","0","0","9","8","e","f","f","3","b","1","f","7","8","e","2","d","0","d","4","8","d","5","0","d","1","6","8","7","b","9","3","b","9","7","d","5","f","7","c","6","d","5","0","4","7","4","0","6","a","5","e","6","8","8","b","3","5","2","2","0","9","b","c","b","9","f","8","2","2","7","d","d","e","3","8","5","d","5","6","6","3","3","2","e","c","c","0","e","a","b","f","a","9","c","f","7","8","2","2","f","d","f","2","0","9","f","7","0","0","2","4","a","5","7","b","1","a","a","0","0","0","c","5","5","b","8","8","1","f","8","1","1","1","b","2","d","c","d","e","4","9","4","a","5","f","4","8","5","e","5","b","c","a","4","b","d","8","8","a","2","7","6","3","a","e","d","1","c","a","2","b","2","f","a","8","f","0","5","4","0","6","7","8","c","d","1","e","0","f","3","a","d","8","0","8","9","2",].join(),
          radix: 16),
      n: BigInt.parse(
          ["a","a","d","d","9","d","b","8","d","b","e","9","c","4","8","b","3","f","d","4","e","6","a","e","3","3","c","9","f","c","0","7","c","b","3","0","8","d","b","3","b","3","c","9","d","2","0","e","d","6","6","3","9","c","c","a","7","0","3","3","0","8","7","0","5","5","3","e","5","c","4","1","4","c","a","9","2","6","1","9","4","1","8","6","6","1","1","9","7","f","a","c","1","0","4","7","1","d","b","1","d","3","8","1","0","8","5","d","d","a","d","d","b","5","8","7","9","6","8","2","9","c","a","9","0","0","6","9",].join(),
          radix: 16),
      h: BigInt.parse('1', radix: 16),
      seed: null) as ECCurve_brainpoolp512r1;

  static ECCurve_brainpoolp512r1 _make(String domainName, ECCurve curve,
          ECPoint G, BigInt n, BigInt _h, List<int>? seed) =>
      ECCurve_brainpoolp512r1._super(domainName, curve, G, n, _h, seed);

  ECCurve_brainpoolp512r1._super(String domainName, ECCurve curve, ECPoint G,
      BigInt n, BigInt _h, List<int>? seed)
      : super(domainName, curve, G, n, _h, seed);
}
